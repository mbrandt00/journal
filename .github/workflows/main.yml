name: ci/cd
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
permissions:
  checks: write
env:
  TAG_COMMIT_PATH: ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-1.amazonaws.com/${{secrets.ECR_REPO}}:latest

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION}}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
    steps:
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Image to Amazon ECR
        id: build-image
        run: |
          cd rails-api
          docker build -t $TAG_COMMIT_PATH .
          docker push $TAG_COMMIT_PATH
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [build]
    env:
      DATABASE_NAME: journal_test
      DATABASE_HOST: localhost
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      RAILS_ENV: test
    steps:
      - name: Add SHORT_SHA env property with commit short sha
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          echo "TAG_COMMIT_PATH=$ECR_REPO:$SHORT_SHA-${{github.run_attempt}}"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Checkout
        uses: actions/checkout@v3
      - name: rspec
        run: |
          docker compose up rspec --quiet-pull
          docker cp rspec:/rails_api/rspec.xml ..
          docker compose down
          # if grep -q 'failures="0"' rspec.xml; then echo no rspec errors; exit 0; else echo rspec errors; exit 1; fi
        working-directory: rails-api
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: "rspec.xml"
  cdk-diff:
    name: CDK Diff
    runs-on: ubuntu-latest
    needs: [test]
    env:
      REGION_PREFIX: use1
      ENVIRONMENT: dev
      PROJECT_NAME: journal
      ECR_REPO: ${{secrets.ECR_REPO}}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install Python dependencies and CDK
        run: |
          python -m pip install --upgrade pip
          # install your Python dependencies here
          npm install -g aws-cdk
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1
      - name: CDK DIFF
        run: |
          cd infrastructure
          pip install -q -r requirements.txt
          cdk diff
  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && ${{ github.base_ref == 'main' }}
    environment:
      name: dev
    needs: [cdk-diff]
    env:
      REGION_PREFIX: use1
      ENVIRONMENT: dev
      PROJECT_NAME: journal
      ECR_REPO: ${{secrets.ECR_REPO}}
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install Python dependencies and CDK
        run: |
          python -m pip install --upgrade pip
          # install your Python dependencies here
          npm install -g aws-cdk
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1
      - name: Deploy to AWS
        run: |
          cd infrastructure
          pip install -q -r requirements.txt
          cdk deploy --require-approval=never
