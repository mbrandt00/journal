on: [ workflow_call ]
jobs:
  cdk_deploy:
    name: CDK Deploy
    runs-on: ubuntu-latest
    environment:
      name: dev
    env:
      REGION_PREFIX: use1
      ENVIRONMENT: dev
      PROJECT_NAME: journal
      ECR_REPO: ${{secrets.ECR_REPO}}
      JOURNAL_DOMAIN: ${{secrets.JOURNAL_DOMAIN}}
      AWS_ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID}}
      AWS_REGION: ${{secrets.AWS_REGION}}
      RAILS_IMAGE_TAG: ${{github.sha}}
      RAILS_DOMAIN: ${{secrets.RAILS_DOMAIN}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      RAILS_ENV: development
      REACT_APP_SERVER_URL: ${{secrets.REACT_APP_SERVER_URL}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install Python dependencies and CDK
        run: |
          python -m pip install --upgrade pip
          npm install -g aws-cdk
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: react_build
          path: front_end/build
      - name: Inject env variables
        run: |
          npm i -g react-inject-env >/dev/null
          cd front_end
          npx react-inject-env set
          cd ..
      - name: Deploy to Dev
        run: |
          echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
          pip install -q -r requirements.txt

          cdk deploy --all --require-approval=never
